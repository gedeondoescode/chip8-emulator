#pragma once

#include <cstdint>

static const unsigned int SCREEN_WIDTH = 64;
static const unsigned int SCREEN_HEIGHT = 32;
static const unsigned int WIN_WIDTH = 960;
static const unsigned int WIN_HEIGHT = 540;

class Chip8 {
 public:
  // Chip8();
  uint8_t font[80] = {
      0xF0, 0x90, 0x90, 0x90, 0xF0,  // 0
      0x20, 0x60, 0x20, 0x20, 0x70,  // 1
      0xF0, 0x10, 0xF0, 0x80, 0xF0,  // 2
      0xF0, 0x10, 0xF0, 0x10, 0xF0,  // 3
      0x90, 0x90, 0xF0, 0x10, 0x10,  // 4
      0xF0, 0x80, 0xF0, 0x10, 0xF0,  // 5
      0xF0, 0x80, 0xF0, 0x90, 0xF0,  // 6
      0xF0, 0x10, 0x20, 0x40, 0x40,  // 7
      0xF0, 0x90, 0xF0, 0x90, 0xF0,  // 8
      0xF0, 0x90, 0xF0, 0x10, 0xF0,  // 9
      0xF0, 0x90, 0xF0, 0x90, 0x90,  // A
      0xE0, 0x90, 0xE0, 0x90, 0xE0,  // B
      0xF0, 0x80, 0x80, 0x80, 0xF0,  // C
      0xE0, 0x90, 0x90, 0x90, 0xE0,  // D
      0xF0, 0x80, 0xF0, 0x80, 0xF0,  // E
      0xF0, 0x80, 0xF0, 0x80,
      0x80  // F
  };
  uint8_t display[SCREEN_WIDTH * SCREEN_HEIGHT];
  bool drawFlag;

  void init();
  void loadRom(const char *filename);
  void cycle();
  void draw_sprite(uint8_t X, uint8_t Y, uint8_t height);

 private:
  uint8_t memory[4096];  // RAM: 0x000 -> 0x1FF
  uint16_t stack[16];    // Limited to 16 to prevent overflow
  uint16_t pc;           // Program Counter
  uint16_t I;            // Index register
  uint8_t V[16];         // variable registers: V0 -> VF
  uint16_t opcode;

  uint8_t delay_timer;
  uint8_t sound_timer;
};